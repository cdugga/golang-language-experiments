factorial
- used to represent the product of natural numbers
- applicable for natural numbers and whole numbers only ( this means negative and fractional numbers are excluded)

5! = 5.4.3.2.1 = 120
6! = 6.(120) = 720
Dividing large factorials represents an opportunity to simplify.
100!/98! = 100.99/1 = 9900 (Note that everything fom 98.97.96....1 is cancelled out as exists for both so we just get product of remainder)

* signed bits can hold both positive and negative values.
* unsigned bits can hold large positive values but cannot hold negative values


* Math.Trunc removes the decimal places entirely so to preserve the decimals we need we multiply by power of ten to shift to the integer part and then
divide by same power of 10 to restore decimals we require

* Example truncates to 6 decimal places
math.Trunc((1/float64(factorial(n)) * sum) *1000000 )/1000000

* math.Log (how many of one number do we need to multiple to get another)
log2(8) = 3 (or 2x2x2)
log5(625) = 5 (or 5x5x5x5x5)

* The exponent says how many times to use the number in a multiplication. Math.exp()
E.g. 2 expo 3 = 2x2x2 =8
=> 2?=8 =3

* 1e6
Means 1 times 10 to the power of 6